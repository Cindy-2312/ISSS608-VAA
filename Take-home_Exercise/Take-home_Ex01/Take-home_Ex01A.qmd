---
title: "Take-home Exercise 01"
author: "Cindy TA"
---

# 1. Introduction

## 1.1. Setting the scene

A local online media company that publishes daily content on digital platforms is planning to release an article on **demographic structures and distribution of Singapore in 2024**.

## 1.2. The task

In this take-home exercise, we are assuming the role of the graphical editor of the media company,and are tasked to prepare **at most three data visualisation** for the article.

# 2. Getting Started

## 2.1. Importing packages and libraries

```{r}
pacman::p_load(ggrepel, patchwork, 
               ggthemes, hrbrthemes,
               tidyverse, ggplot2) 
```

## 2.2. Importing data

The dataset shared by Department of Statistics, Singapore (DOS), *Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024*, is used

```{r}
pop_data <- read_csv("data/respopagesex2024.csv")
glimpse(pop_data)
```

## 2.3. Exploring data

```{r}
summary(pop_data)
unique(pop_data$PA)
unique(pop_data$Sex)
range(pop_data$Age)
```

# 3. Data Visualisation

"Singapore's aging population is unevenly distributed, with certain regions showing both higher elderly concentration and overall population size â€” posing specific challenges for urban planning and services."

## 3.1. Population pyramid (Sex vs Age)

```{r}
pyramid_data <- pop_data %>%
  group_by(Age, Sex) %>%
  summarise(Pop = sum(Pop), .groups = "drop") %>%
  mutate(Pop = ifelse(Sex == "Males", -Pop, Pop))

ggplot(pyramid_data, aes(x = Age, y = Pop, fill = Sex)) +
  geom_bar(stat = "identity") +
  coord_flip() +
  scale_y_continuous(labels = abs) +
  scale_fill_manual(values = c("Males" = "#102E50", "Females" = "#F7CFD8")) + 
  scale_x_discrete(breaks = seq(0, 100, by = 10)) +
  labs(title = "Singapore Age Pyramid (2024)",
       x = "Age", y = "Population") +
  theme_classic()
```

## 3.2. Top 20 most popular planning areas with elderly population shown

```{r}
library(tidyverse)

# Summarise total and elderly population by PA
top_areas <- pop_data %>%
  group_by(PA) %>%
  summarise(
    Total = sum(Pop),
    Elderly = sum(Pop[Age >= 65]),
    .groups = "drop"
  ) %>%
  
  top_n(15, Total)  # or 20 if you prefer

# Reshape into long format for grouped bars
plot_data <- top_areas %>%
  pivot_longer(cols = c(Total, Elderly),
               names_to = "Type",
               values_to = "Population") %>%
  mutate(
    Type = recode(Type,
                  "Total" = "Total Population",
                  "Elderly" = "Elderly (65+)")
  )
# Reorder PA by Total Population (not elderly)
plot_data <- plot_data %>%
  left_join(top_areas %>% select(PA, Total), by = "PA") %>%
  mutate(PA = fct_reorder(PA, Total, .desc = FALSE))  # use forcats::fct_reorder

```

```{r}
ggplot(plot_data, aes(x = PA, y = Population, fill = Type)) +
  geom_col(position = "dodge") +
  geom_text(aes(label = scales::comma(Population)),
            position = position_dodge(width = 0.9), hjust = -0.1, size = 3) +
  scale_y_continuous(labels = scales::comma,
                     expand = expansion(mult = c(0, 0.15))) +
  scale_fill_manual(values = c("Total Population" = "#8E7DBE", "Elderly (65+)" = "#EFC000")) +
  coord_flip() +
  labs(
    title = "Total vs Elderly Population in Top Planning Areas (2024)",
    x = "Planning Area",
    y = "Population",
    fill = ""
  ) +
  theme_classic()

```

## 3.3. Elderly Population Share (%) by Planning Area

```{r}
elderly_pct_data <- pop_data %>%
  group_by(PA) %>%
  summarise(
    Elderly = sum(Pop[Age >= 65]),
    Total = sum(Pop),
    .groups = "drop"
  ) %>%
  mutate(ElderlyPct = Elderly / Total * 100) %>%
  arrange(desc(ElderlyPct)) %>%
  slice_head(n = 20)  # or more, depending on your needs
```

```{r}
ggplot(elderly_pct_data, aes(x = reorder(PA, ElderlyPct), y = ElderlyPct)) +
  geom_col(fill = "#EFC000") +
  coord_flip() +
  labs(
    title = "Top Planning Areas by Elderly Share (%)",
    x = "Planning Area",
    y = "Elderly Population (%)"
  ) +
  theme_classic()
```
